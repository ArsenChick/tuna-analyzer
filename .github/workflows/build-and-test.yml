name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  py-build:
    name: Build Python

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest --cov=app -v

  js-build:
    name: Build NodeJS

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: './frontend'

    steps:
    - name: WHAT
      run: ls -la
    - name: Setup NodeJS 17
      uses: actions/setup-node@v2
      with:
        node-version: '17'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: npm install
      run: npm ci
    - name: npm build
      run: npm run build --if-present


  cov:
    name: Coveralls

    needs: [py-build, js-build]
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Coveralls
      run: |
        python -m pip install coveralls
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}